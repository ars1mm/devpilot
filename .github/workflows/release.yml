---
name: Release

"on":
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-release:
    name: Build Release - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: devpilot-linux
            asset_name: devpilot-linux-x64
          - os: windows-latest
            artifact_name: devpilot.exe
            asset_name: devpilot-windows-x64.exe
          - os: macos-latest
            artifact_name: devpilot
            asset_name: devpilot-macos-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup vcpkg (Windows only)
        if: runner.os == 'Windows'
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake \
            libsqlite3-dev pkg-config
          # Try to install tree-sitter, fallback if not available
          sudo apt-get install -y libtree-sitter-dev || \
            echo "tree-sitter not available, will build without it"

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake sqlite pkg-config
          # Try to install tree-sitter, fallback if not available
          brew install tree-sitter || \
            echo "tree-sitter not available, will build without it"

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          # Install SQLite3, skip tree-sitter for Windows if not available
          vcpkg install sqlite3:x64-windows || \
            echo "vcpkg install failed, will use system packages"

      - name: Configure CMake (Unix)
        if: runner.os != 'Windows'
        working-directory: devpilot
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        working-directory: devpilot
        run: |
          # Try with vcpkg first, fallback to system packages
          VCPKG_CMAKE="${{ github.workspace }}/vcpkg/scripts/buildsystems/"
          VCPKG_CMAKE="${VCPKG_CMAKE}vcpkg.cmake"
          if [ -f "$VCPKG_CMAKE" ]; then
            cmake -B build -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE="$VCPKG_CMAKE" || \
            cmake -B build -DCMAKE_BUILD_TYPE=Release
          else
            cmake -B build -DCMAKE_BUILD_TYPE=Release
          fi

      - name: Build
        working-directory: devpilot
        run: cmake --build build --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        env:
          EXT: ${{ runner.os == 'Windows' && '.exe' || '' }}
        with:
          name: ${{ matrix.asset_name }}
          path: |
            devpilot/build/devpilot${{ env.EXT }}
            devpilot/build/Release/devpilot${{ env.EXT }}

  create-release:
    name: Create Release
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/devpilot*
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

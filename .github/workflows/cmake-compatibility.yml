---
name: CMake Compatibility

"on":
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 6 * * 1'  # Weekly Monday 6 AM UTC

jobs:
  cmake-versions:
    name: CMake ${{ matrix.cmake_version }} - Ubuntu
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        cmake_version:
          - "3.16"    # Minimum required version
          - "3.20"    # Popular LTS version
          - "3.25"    # Recent stable
          - "latest"  # Latest available

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup CMake ${{ matrix.cmake_version }}
        uses: jwlawson/actions-setup-cmake@v2.0
        with:
          cmake-version: ${{ matrix.cmake_version }}

      - name: Verify CMake version
        run: cmake --version

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential \
            libsqlite3-dev pkg-config
          # Try to install tree-sitter, fallback if not available
          sudo apt-get install -y libtree-sitter-dev || \
            echo "tree-sitter not available, will build without it"

      - name: Configure with CMake ${{ matrix.cmake_version }}
        working-directory: devpilot
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTS=ON

      - name: Build
        working-directory: devpilot
        run: cmake --build build

      - name: Test
        working-directory: devpilot/build
        run: ctest --output-on-failure

  compiler-versions:
    name: ${{ matrix.compiler.name }} ${{ matrix.compiler.version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        compiler:
          - name: gcc
            version: "9"
            cc: gcc-9
            cxx: g++-9
          - name: gcc
            version: "10"
            cc: gcc-10
            cxx: g++-10
          - name: gcc
            version: "11"
            cc: gcc-11
            cxx: g++-11
          - name: gcc
            version: "12"
            cc: gcc-12
            cxx: g++-12
          - name: clang
            version: "11"
            cc: clang-11
            cxx: clang++-11
          - name: clang
            version: "12"
            cc: clang-12
            cxx: clang++-12
          - name: clang
            version: "13"
            cc: clang-13
            cxx: clang++-13
          - name: clang
            version: "14"
            cc: clang-14
            cxx: clang++-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies and compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake \
            libsqlite3-dev pkg-config
          # Try to install tree-sitter, fallback if not available
          sudo apt-get install -y libtree-sitter-dev || \
            echo "tree-sitter not available, will build without it"
          if [[ "${{ matrix.compiler.name }}" == "gcc" ]]; then
            sudo apt-get install -y ${{ matrix.compiler.cxx }}
          else
            sudo apt-get install -y ${{ matrix.compiler.cc }} \
              ${{ matrix.compiler.cxx }}
          fi

      - name: >-
          Configure with ${{ matrix.compiler.name }}
          ${{ matrix.compiler.version }}
        working-directory: devpilot
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTS=ON

      - name: Build
        working-directory: devpilot
        run: cmake --build build

      - name: Test
        working-directory: devpilot/build
        run: ctest --output-on-failure
